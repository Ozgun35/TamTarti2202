<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tamtartiPic.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAyAJYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9UqKpyatawybXuYVb3cUh1ixVsfa4Af8AroKV0aezn0iy7Rmq
        wvoGjEgmjKf3twxTf7Stuv2iPb/vClzJE8sn0LdGRVaPULaQkJPGxHOAwo+3W3P+kR/99CncfJLsWaNw
        9arfb7fcAJoy3oGFK91BH9+ZF/3mAoutxcsuxYoqodSthj/SI/8AvsU+O9gkbassbNjoGBNK6HyStexZ
        pM1Xe8ihxvlRB/tMBSC+twOZ48/7wp3FyyeyLVJVdbyFk3CVCvqDxSf2hbf894sdvmFF13Dll2LORQCD
        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
        2Q==
</value>
  </data>
  <data name="tamtartiPic.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAyAJYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9UqKpyatawybXuYVb3cUh1ixVsfa4Af8AroKV0aezn0iy7Rmq
        wvoGjEgmjKf3twxTf7Stuv2iPb/vClzJE8sn0LdGRVaPULaQkJPGxHOAwo+3W3P+kR/99CncfJLsWaNw
        9arfb7fcAJoy3oGFK91BH9+ZF/3mAoutxcsuxYoqodSthj/SI/8AvsU+O9gkbassbNjoGBNK6HyStexZ
        pM1Xe8ihxvlRB/tMBSC+twOZ48/7wp3FyyeyLVJVdbyFk3CVCvqDxSf2hbf894sdvmFF13Dll2LORQCD
        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
        2Q==
</value>
  </data>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>